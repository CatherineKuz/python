# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1


def fibonacci(n):
    """
    1) пользователь вводит длину ряда Фибоначчи
    2) пользователь вводит отрезок ряда, который надо отобразить
    """
    fib1 = 1
    fib2 = 1
    fib = [fib1, fib2]
    i = 0
    while i < n - 2:
        fib_sum = fib1 + fib2
        fib1 = fib2
        fib2 = fib_sum
        i = i + 1
        fib.append(fib_sum)
    print(fib)
    if x<y:
        print(fib[x:y+1])
    else:
        print("2е число должно быть больше 1го")

n = int(input("Введите длину ряда Фибоначчи: "))
x = int(input("Введите номер 1ого элемента, который надо отобразить: "))
y = int(input("Введите номер последнего элемента: "))

fibonacci(n)


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

nums = [2, 10, -12, 2.5, 20, -11, 4, 4, 0]
n = 1
while n < len(nums):
   for i in range(len(nums) - n):
       if nums[i] > nums[i + 1]:
           nums[i], nums[i + 1] = nums[i + 1], nums[i]
   n += 1



# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

#вот тут не работает, не успеваю разобраться, что к чему

nums = [2, 10, -12, 2.5, 20, -11, 4, 4, 0]
nums_new = []

def positive(i):
    if nums(i) > 0:
        list(nums_new.append(i))
    else:
        pass


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.


A1 = (2, 3)
A2 = (3, 5)
A3 = (7, 5)
A4 = (6, 3)

if A2[1] - A1[1] == A3[1] - A4[1] and A4[0] - A1[0] == A3[0] - A2[0]:
    print("parallelogram")
else:
    print("not a parallelogram")